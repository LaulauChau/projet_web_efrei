name: Web CI

on:
  push:
    branches:
      - dev
      - master
    paths:
      - "apps/web/**"
      - ".github/workflows/web-ci.yaml"
  pull_request:
    branches:
      - dev
      - master
    paths:
      - "apps/web/**"
      - ".github/workflows/web-ci.yaml"

jobs:
  typecheck:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
        pnpm-version: [9]

    defaults:
      run:
        working-directory: apps/web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create environment file
        working-directory: apps/web
        run: |
          cat << 'EOL' > src/config/environment.ts
          export const environment = {
            firebase: {
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'
            }
          };
          EOL

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: ./apps/web/pnpm-lock.yaml
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: apps/web

      - name: Typecheck
        run: pnpm run typecheck
        working-directory: apps/web

  lint:
    needs: [typecheck]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
        pnpm-version: [9]

    defaults:
      run:
        working-directory: apps/web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: ./apps/web/pnpm-lock.yaml
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: apps/web

      - name: Lint
        run: pnpm run lint
        working-directory: apps/web

  build:
    needs: [typecheck, lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22]
        pnpm-version: [9]

    defaults:
      run:
        working-directory: apps/web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create environment file
        working-directory: apps/web
        run: |
          cat << 'EOL' > src/config/environment.ts
          export const environment = {
            firebase: {
              projectId: '${{ secrets.FIREBASE_PROJECT_ID }}',
              appId: '${{ secrets.FIREBASE_APP_ID }}',
              storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET }}',
              apiKey: '${{ secrets.FIREBASE_API_KEY }}',
              authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN }}',
              messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}'
            }
          };
          EOL

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ matrix.pnpm-version }}
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          cache: "pnpm"
          cache-dependency-path: ./apps/web/pnpm-lock.yaml
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        working-directory: apps/web

      - name: Build
        run: pnpm run build
        working-directory: apps/web